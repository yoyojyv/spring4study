allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
	apply plugin: 'application'

	//mainClassName = System.getProperty("mainClass")

    group = 'com.apress.isf'
    version = '1.0'

    repositories {
		jcenter()
        mavenCentral()
		maven {
			url 'http://repo.spring.io/libs-snapshot'
			url 'http://repo.spring.io/milestone'
			url 'http://repo.spring.io/libs-release'
		}
    }

    dependencies {

    	compile 'org.codehaus.groovy:groovy-all:2.4.1'
		compile 'org.springframework.boot:spring-boot-starter-web:1.2.2.RELEASE'

    /*
		compile 'org.codehaus.groovy:groovy-all:2.3.0'
		compile 'com.thoughtworks.xstream:xstream:1.4.7'
		compile 'org.aspectj:aspectjrt:1.7.4'
		compile 'org.springframework:spring-context:4.0.5.RELEASE'
		compile 'org.springframework:spring-context-support:4.0.5.RELEASE'
		compile 'org.springframework:spring-jdbc:4.0.5.RELEASE'
		compile 'org.springframework.boot:spring-boot-starter-web:1.1.1.RELEASE'

		runtime 'cglib:cglib:3.1'
		runtime 'org.aspectj:aspectjweaver:1.7.4'
		runtime 'hsqldb:hsqldb:1.8.0.10'

     	
	*/	

		// test 
		testCompile 'junit:junit:4.12'
		testCompile 'org.springframework:spring-test:4.1.5.RELEASE'
    }

	test {

		testLogging {
			// showStandardStreams = true
			events 'started', 'passed'
		}

		onOutput { descriptor, event ->
			logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
		  }

	}
}

project(':ch01'){
	mainClassName = System.getProperty("mainClass")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}